!function(n,i){"use strict";angular.module("dora",[]),angular.element(i).ready(function(){angular.bootstrap(i,["dora"])}),angular.module("dora").constant("config",{defaultRemainingTime:60,noteOn:144,noteOff:128,noteNumCheckToArduino:0,noteNumCheckToMidi:1,noteNumTimerOn:2,noteNumTimerOff:3,noteNumSolenoidOn:4,noteNumTimerToggle:5}),angular.module("dora").component("doraApp",{template:'\n<div class="app" ng-class="{\'app--timeup\' : $ctrl.remainingTime === 0}">\n  <div class="loading" ng-show="$ctrl.isLoading">\n    <i class="fa fa-spinner fa-spin"></i>\n  </div>\n  <div ng-if="$ctrl.hasMidi">\n    <dora-timer remaining-time="$ctrl.remainingTime"></dora-timer>\n  </div>\n  <div ng-if="$ctrl.isError">\n    <dora-error error-message="$ctrl.errorMessage"></dora-error>\n  </div>\n</div>\n  ',controller:"DoraAppController"}).controller("DoraAppController",["$timeout","$interval","config","midi",function(n,i,t,e){function o(){this.remainingTime=t.defaultRemainingTime,e.create().then(r.bind(this),s.bind(this))}function r(){e.sendNoteOn(t.noteNumCheckToArduino),this.isLoading=!1,this.hasMidi=!0}function s(n){this.errorMessage=n,this.isLoading=!1,this.isError=!0,console.error("midi.create() : "+n)}this.isLoading=!0,this.hasMidi=!1,this.isError=!1,this.errorMessage="",this.remainingTime=null,o.call(this)}]),angular.module("dora").component("doraError",{template:'\n<div class="error">\n  <i class="fa fa-times-circle error__icon"></i>\n  <p class="error__text" ng-bind="$ctrl.errorMessage"></p>\n</div>\n  ',bindings:{errorMessage:"<"}}),angular.module("dora").component("doraTimer",{template:'\n<div class="count" ng-bind="$ctrl.remainingTime | time" ng-class="{\'count--disabled\':$ctrl.isSetting}"></div>\n<div class="controler-box">\n  <div ng-hide="$ctrl.isSetting">\n    <button type="button" class="controler-box__btn" ng-click="$ctrl.play()" ng-show="!$ctrl.isPlaying">\n      <i class="fa fa-play"></i>\n    </button>\n    <button type="button" class="controler-box__btn" ng-click="$ctrl.pause()" ng-show="$ctrl.isPlaying">\n      <i class="fa fa-pause"></i>\n    </button>\n    <button type="button" class="controler-box__btn" ng-click="$ctrl.reset()" ng-disabled="!$ctrl.canRefresh">\n      <i class="fa fa-refresh"></i>\n    </button>\n    <button type="button" class="controler-box__btn" ng-click="$ctrl.openSetting()" ng-disabled="$ctrl.isPlaying">\n      <i class="fa fa-gear"></i>\n    </button>\n  </div>\n  <form name="setting" novalidate ng-show="$ctrl.isSetting">\n    <input type="number" name="defaultRemainingTime" ng-model="$ctrl.defaultRemainingTime" min="0" max="3600" class="controler-box__input">\n    <button type="button" class="controler-box__btn" ng-click="$ctrl.closeSetting(setting.$dirty)" ng-disabled="setting.$invalid">\n      <i class="fa fa-check"></i>\n    </button>\n  </form>\n</div>\n  ',controller:"DoraTimerController",bindings:{remainingTime:"="}}).controller("DoraTimerController",["$scope","$timeout","$interval","config","midi",function(n,i,t,e,o){function r(){this.defaultRemainingTime=e.defaultRemainingTime,o.setHandler(this._onMidiEvent.bind(this))}function s(){0===this.remainingTime&&this.reset(),this.isPlaying=!0,this.canRefresh=!1,p=Date.now(),b=this.remainingTime,f=t(this._countdown.bind(this),1e3),o.sendNoteOn(e.noteNumTimerOn)}function a(){this.isPlaying=!1,this.canRefresh=this.remainingTime<this.defaultRemainingTime,t.cancel(f),o.sendNoteOn(e.noteNumTimerOff)}function l(){this.remainingTime=this.defaultRemainingTime,this.canRefresh=!1}function c(){this.isSetting=!0}function u(n){this.isSetting=!1,n&&this.reset()}function d(){this.isPlaying?this.pause():this.play()}function g(){var n=b-Math.floor((Date.now()-p)/1e3);n<=0&&(n=0),this.remainingTime=n,this.remainingTime<=0&&this._onComplete()}function m(){this.pause(),o.sendNoteToggle(e.noteNumSolenoidOn)}function h(n){n.data[0]===e.noteOn&&n.data[1]===e.noteNumTimerToggle&&this._playToggle()}var f=null,p=null,b=null;this.isPlaying=!1,this.canRefresh=!1,this.isSetting=!1,this.defaultRemainingTime=null,this.play=s,this.pause=a,this.reset=l,this.openSetting=c,this.closeSetting=u,this._playToggle=d,this._countdown=g,this._onComplete=m,this._onMidiEvent=h,r.call(this)}]),angular.module("dora").service("midi",["$window","$q","$timeout","$rootScope","config",function(n,i,t,e,o){function r(){var t=i.defer();return n.navigator.requestMIDIAccess().then(function(n){d=n;for(var i=d.inputs.values(),e=i.next();!e.done;e=i.next())m.push(e.value);for(var o=d.outputs.values(),r=o.next();!r.done;r=o.next())h.push(r.value);for(var s=0;s<m.length;s++)m[s].onmidimessage=u;h.length>0?t.resolve():t.reject("Device not found.")},t.reject),t.promise}function s(n){angular.isFunction(n)&&(g=function(i){0!==i.data[2]&&(n(i),e.$digest())})}function a(n){n=n||0,h.length>0&&h[0].send([o.noteOn,n,127])}function l(n){n=n||0,h.length>0&&h[0].send([o.noteOff,n,127])}function c(n,i){i=i||100,a(n),t(function(){l(n)},i)}function u(n){g(n)}this.create=r,this.setHandler=s,this.sendNoteOn=a,this.sendNoteOff=l,this.sendNoteToggle=c;var d=null,g=angular.noop,m=[],h=[]}]),angular.module("dora").filter("time",function(){return function(n){var i=Math.floor(n/60),t=n%60;return t<10&&(t="0"+t),i+":"+t}})}(this,this.document);